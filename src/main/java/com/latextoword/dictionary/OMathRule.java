package com.latextoword.dictionary;

import com.latextoword.atom.Atom;
import com.latextoword.atom.AtomBE;

import java.util.Arrays;

public  enum OMathRule {
	CFRAC(7,"\\cfrac",new Atom(7,"<m:f><m:fPr><m:ctrlPr><w:rPr><w:sz w:val=\"30\"/></w:rPr></m:ctrlPr></m:fPr>","<m:num>",new Atom(),"</m:num>","<m:den>",new Atom(),"</m:den></m:f>"),1),
	OVER(8,"\\over",new Atom(11,"<m:f><m:fPr><m:ctrlPr><w:rPr><w:sz w:val=\"30\"/></w:rPr></m:ctrlPr></m:fPr>","<m:num>",new Atom(),"</m:num>","<m:den>",new Atom(),"</m:den></m:f>"),1),
    DFRAC(9,"\\dfrac",new Atom(9,"<m:f><m:fPr><m:ctrlPr><w:rPr><w:sz w:val=\"30\"/></w:rPr></m:ctrlPr></m:fPr>","<m:num>",new Atom(),"</m:num>","<m:den>",new Atom(),"</m:den></m:f>"),1),
	SQRT(10,"\\sqrt",new Atom(10,"<m:rad>","<m:deg>",new Atom("<m:radPr><m:degHide m:val=\"on\"/></m:radPr>",1),"</m:deg>","<m:e>",new Atom(),"</m:e></m:rad>"),1),
	FRAC(11,"\\frac",new Atom(11,"<m:f><m:fPr><m:ctrlPr><w:rPr><w:sz w:val=\"30\"/></w:rPr></m:ctrlPr></m:fPr>","<m:num>",new Atom(),"</m:num>","<m:den>",new Atom(),"</m:den></m:f>"),1),
    BEGIN(12,"\\begin",new Atom(12,"<m:d>","<m:dPr>",new Atom(""),"</m:dPr><m:e><m:m><m:mPr><m:mcs><m:mc><m:mcPr><m:count m:val=\"3\"/><m:mcJc m:val=\"left\"/></m:mcPr></m:mc></m:mcs></m:mPr><m:mr><m:e>"),1),
    END(13,"\\end",new Atom(13,"</m:e></m:mr></m:m></m:e></m:d>","",new Atom(),""),1),
    QQUAD(14,"\\qquad",new Atom(14,"<m:r><m:t>    </m:t></m:r>"),0),
    QUAD(15,"\\quad",new Atom(15,"<m:r><m:t>  </m:t></m:r>"),0),
    ONESPACE(16,"\\ ",new Atom(16,"<m:r><m:t> </m:t></m:r>"),0),
    MIDDLESPACE(17,"\\;",new Atom(17,"<m:r><m:t>\u200B</m:t></m:r>"),0),
    SMALLSPACE(18,"\\,",new Atom(18,"<m:r><m:t>\u200B</m:t></m:r>"),0),
    CLOSESPACE(19,"\\!",new Atom(19,"<m:r><m:t>\u200B</m:t></m:r>"),0),
	LEFT(20,"\\left",new Atom(20,"<m:d>","<m:dPr>",new Atom(""),"</m:dPr><m:e>"),1),
	RIGHT(21,"\\right",new Atom(21,"</m:e></m:d>","",new Atom(),""),1),
	BRACES_BEGIN(22,"\\{",new Atom(22,"<m:r><m:t>{</m:t></m:r>"),0),
	BRACES_END(23,"\\}",new Atom(23,"<m:r><m:t>}</m:t></m:r>"),0),
	SQARE_BRACKET_BEGIN(24,"\\[",new Atom(24,"<m:r><m:t>[</m:t></m:r>"),0),
	SQARE_BRACKET_END(25,"\\]",new Atom(25,"<m:r><m:t>]</m:t></m:r>"),0),
	BRACKET_BEGIN(26,"\\(",new Atom(26,"<m:r><m:t>(</m:t></m:r>"),0),
	BRACKET_END(27,"\\)",new Atom(27,"<m:r><m:t>)</m:t></m:r>"),0),
	BAR(28,"\\bar",new Atom(28,"<m:acc><m:accPr><m:chr m:val=\"̅\"/></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	DOT(29,"\\dot",new Atom(29,"<m:acc><m:accPr><m:chr m:val=\"̇\"/></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	SIN(30,"\\sin",new Atom(30,"<m:r><m:t>sin</m:t></m:r>"),0),
	COS(31,"\\cos",new Atom(31,"<m:r><m:t>cos</m:t></m:r>"),0),
	TAN(32,"\\tan",new Atom(32,"<m:r><m:t>tan</m:t></m:r>"),0),
	LOG(33,"\\log",new Atom(33,"<m:r><m:t>log</m:t></m:r>"),0),

	THETA(34,"\\theta",new Atom(34,"<m:r><m:t>θ</m:t></m:r>"),0),
	ALPHA(35,"\\alpha",new Atom(35,"<m:r><m:t>α</m:t></m:r>"),0),
	ETA(36,"\\eta",new Atom(36,"<m:r><m:t>η</m:t></m:r>"),0),
	GAMMA(37,"\\gamma",new Atom(37,"<m:r><m:t>γ</m:t></m:r>"),0),
	DELTA(38,"\\delta",new Atom(38,"<m:r><m:t>δ</m:t></m:r>"),0),
	PHI(39,"\\phi",new Atom(39,"<m:r><m:t>φ</m:t></m:r>"),0),
	P_HI(40,"\\Phi",new Atom(40,"<m:r><m:t>φ</m:t></m:r>"),0),
	SIGMA(41,"\\sigma",new Atom(41,"<m:r><m:t>σ</m:t></m:r>"),0),
	S_IGMA(42,"\\Sigma",new Atom(42,"<m:r><m:t>Σ</m:t></m:r>"),0),
	VARPHI(43,"\\varphi",new Atom(43,"<m:r><m:t>φ</m:t></m:r>"),0),
	PARTIAL(44,"\\partial",new Atom(44,"<m:r><m:t>∂</m:t></m:r>"),0),
	INFTY(45,"\\infty",new Atom(45,"<m:r><m:t>∞</m:t></m:r>"),0),
	NEQ(46,"\\neq",new Atom(46,"<m:r><m:t>≠</m:t></m:r>"),0),
	NE(47,"\\ne",new Atom(47,"<m:r><m:t>≠</m:t></m:r>"),0),
	PM(48,"\\pm",new Atom(48,"<m:r><m:t>±</m:t></m:r>"),0),
	APPROX(49,"\\approx",new Atom(49,"<m:r><m:t>≈</m:t></m:r>"),0),
	BETA(50,"\\beta",new Atom(50,"<m:r><m:t>β</m:t></m:r>"),0),
	VAREPSILON(51,"\\varepsilon",new Atom(51,"<m:r><m:t>ε</m:t></m:r>"),0),
	EPSILON(52,"\\epsilon",new Atom(52,"<m:r><m:t>ϵ</m:t></m:r>"),0),
	MU(53,"\\mu",new Atom(53,"<m:r><m:t>μ</m:t></m:r>"),0),
	OMEGA(54,"\\omega",new Atom(54,"<m:r><m:t>ω</m:t></m:r>"),0),
	PI(55,"\\pi",new Atom(55,"<m:r><m:t>π</m:t></m:r>"),0),
	TIMES(56,"\\times",new Atom(56,"<m:r><m:t>×</m:t></m:r>"),0),
	DIV(57,"\\div",new Atom(57,"<m:r><m:t>÷</m:t></m:r>"),0),
	PROPTO(58,"\\propto",new Atom(58,"<m:r><m:t>∝</m:t></m:r>"),0),
	LE(59,"\\le",new Atom(59,"<m:r><m:t>≤</m:t></m:r>"),0),
	LEQ(60,"\\leq",new Atom(60,"<m:r><m:t>≤</m:t></m:r>"),0),
	GE(61,"\\ge",new Atom(61,"<m:r><m:t>≥</m:t></m:r>"),0),
	FORALL(62,"\\forall",new Atom(62,"<m:r><m:t>∀</m:t></m:r>"),0),
	EXISTS(63,"\\exists",new Atom(63,"<m:r><m:t>∃</m:t></m:r>"),0),
	IN(64,"\\in",new Atom(64,"<m:r><m:t>∈</m:t></m:r>"),0),
	NI(65,"\\ni",new Atom(65,"<m:r><m:t>∋</m:t></m:r>"),0),
	CUP(66,"\\cup",new Atom(66,"<m:r><m:t>∪</m:t></m:r>"),0),
	CAP(67,"\\cap",new Atom(67,"<m:r><m:t>∩</m:t></m:r>"),0),
	THEREFORE(56,"\\therefore",new Atom(56,"<m:r><m:t>∴</m:t></m:r>"),0),
	BECAUSE(57,"\\because",new Atom(57,"<m:r><m:t>∵</m:t></m:r>"),0),
	COT(58,"\\cot",new Atom(58,"<m:r><m:t>cot</m:t></m:r>"),0),
	SEC(59,"\\sec",new Atom(59,"<m:r><m:t>cot</m:t></m:r>"),0),
	XI(60,"\\xi",new Atom(60,"<m:r><m:t>ξ</m:t></m:r>"),0),
	RHO(61,"\\rho",new Atom(61,"<m:r><m:t>ρ</m:t></m:r>"),0),
	TAU(62,"\\tau",new Atom(62,"<m:r><m:t>τ</m:t></m:r>"),0),
	UPSILON(63,"\\upsilon",new Atom(63,"<m:r><m:t>υ</m:t></m:r>"),0),
	LAMBDA(64,"\\lambda",new Atom(64,"<m:r><m:t>λ</m:t></m:r>"),0),
	D_ELTA(65,"\\Delta",new Atom(65,"<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><m:t>Δ</m:t></m:r>"),0),
	G_AMMA(66,"\\Gamma",new Atom(66,"<m:r><m:t>Γ</m:t></m:r>"),0),
	P_I(67,"\\Pi",new Atom(67,"<m:r><m:t>Π</m:t></m:r>"),0),
	GETS(68,"\\gets",new Atom(68,"<m:r><m:t>←</m:t></m:r>"),0),
	LEFTARROW(69,"\\leftarrow",new Atom(69,"<m:r><m:t>←</m:t></m:r>"),0),
	RIGHTARROW(70,"\\rightarrow",new Atom(70,"<m:r><m:t>→</m:t></m:r>"),0),
	TO(71,"\\to",new Atom(71,"<m:r><m:t>→</m:t></m:r>"),0),
	UPARROW(72,"\\uparrow",new Atom(72,"<m:r><m:t>↑</m:t></m:r>"),0),
	DOWNARROW(73,"\\downarrow",new Atom(73,"<m:r><m:t>↓</m:t></m:r>"),0),
	LEFTRIGHTARROW(74,"\\leftrightarrow",new Atom(74,"<m:r><m:t>↔</m:t></m:r>"),0),
	UPDOWNARROW(75,"\\updownarrow",new Atom(75,"<m:r><m:t>↕</m:t></m:r>"),0),
	LEFT_ARROW(76,"\\Leftarrow",new Atom(76,"<m:r><m:t>⇐</m:t></m:r>"),0),
	RIGHT_ARROW(77,"\\Rightarrow",new Atom(77,"<m:r><m:t>⇒</m:t></m:r>"),0),
	UP_ARROW(78,"\\Uparrow",new Atom(78,"<m:r><m:t>⇑</m:t></m:r>"),0),
	DOWN_ARROW(79,"\\Downarrow",new Atom(79,"<m:r><m:t>⇓</m:t></m:r>"),0),
	LEFT_RIGHTARROW(80,"\\Leftrightarrow",new Atom(80,"<m:r><m:t>⇔</m:t></m:r>"),0),
	UP_DOWNARROW(81,"\\Updownarrow",new Atom(81,"<m:r><m:t>⇕</m:t></m:r>"),0),
	LONGLEFTARROW(82,"\\longleftarrow",new Atom(82,"<m:r><m:t>⟵</m:t></m:r>"),0),
	LONGRIGHTARROW(83,"\\longrightarrow",new Atom(83,"<m:r><m:t>⟶</m:t></m:r>"),0),
	LONGLEFTRIGHTARROW(84,"\\longleftrightarrow",new Atom(84,"<m:r><m:t>⟷</m:t></m:r>"),0),
	LONG_LEFTARROW(85,"\\Longleftarrow",new Atom(85,"<m:r><m:t>⟸</m:t></m:r>"),0),
	LONG_RIGHTARROW(86,"\\Longrightarrow",new Atom(86,"<m:r><m:t>⟹</m:t></m:r>"),0),
	LONG_LEFTRIGHTARROW(87,"\\Longleftrightarrow",new Atom(87,"<m:r><m:t>⟺</m:t></m:r>"),0),
	NEARROW(88,"\\nearrow",new Atom(88,"<m:r><m:t>↗</m:t></m:r>"),0),
	NWARROW(89,"\\nwarrow",new Atom(89,"<m:r><m:t>↖</m:t></m:r>"),0),
	ANGLE(90,"\\angle",new Atom(90,"<m:r><m:t>∠</m:t></m:r>"),0),
	PERP(91,"\\perp",new Atom(91,"<m:r><m:t>⊥</m:t></m:r>"),0),
	BOT(92,"\\bot",new Atom(92,"<m:r><m:t>⊥</m:t></m:r>"),0),
	PARALLEL(93,"\\parallel",new Atom(93,"<m:r><m:t>∥</m:t></m:r>"),0),
	TRIANGLE(94,"\\triangle",new Atom(94,"<m:r><m:t>△</m:t></m:r>"),0),
	B_OX(95,"\\Box",new Atom(95,"<m:r><m:t>□</m:t></m:r>"),0),
	SQUARE(96,"\\square",new Atom(96,"<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><m:t>□</m:t></m:r>"),0),
	D_IAMOND(97,"\\Diamond",new Atom(97,"<m:r><m:t>◊</m:t></m:r>"),0),
	CIRC(98,"\\circ",new Atom(98,"<m:r><m:t>∘</m:t></m:r>"),0),
	OMICRON(99,"\\omicron",new Atom(99,"<m:r><m:t>∘</m:t></m:r>"),0),
	OPLUS(100,"\\oplus",new Atom(100,"<m:r><m:t>⊕</m:t></m:r>"),0),
	BIGOPLUS(101,"\\bigoplus",new Atom(101,"<m:r><m:t>⊕</m:t></m:r>"),0),
	OTIMES(102,"\\otimes",new Atom(102,"<m:r><m:t>⊗</m:t></m:r>"),0),
	BIGOTIMES(103,"\\bigotimes",new Atom(103,"<m:r><m:t>⊗</m:t></m:r>"),0),
	BULLET(104,"\\bullet",new Atom(104,"<m:r><m:t>·</m:t></m:r>"),0),
	CDOT(105,"\\cdot",new Atom(105,"<m:r><m:t>∙</m:t></m:r>"),0),
	CLUBSUIT(106,"\\clubsuit",new Atom(106,"<m:r><m:t>♣</m:t></m:r>"),0),
	SPADESUIT(107,"\\spadesuit",new Atom(107,"<m:r><m:t>♠</m:t></m:r>"),0),
	SHARP(108,"\\sharp",new Atom(108,"<m:r><m:t>♯</m:t></m:r>"),0),
	LDOTS(109,"\\ldots",new Atom(109,"<m:r><m:t>…</m:t></m:r>"),0),
	DOTS(110,"\\dots",new Atom(110,"<m:r><m:t>…</m:t></m:r>"),0),
	PRIME(111,"\\prime",new Atom(111,"<m:r><m:t>'</m:t></m:r>"),0),
	WEDGE(112,"\\wedge",new Atom(112,"<m:r><m:t>∧</m:t></m:r>"),0),
	LAND(113,"\\land",new Atom(113,"<m:r><m:t>∧</m:t></m:r>"),0),
	BIGWEDGE(114,"\\bigwedge",new Atom(114,"<m:r><m:t>∧</m:t></m:r>"),0),
	LOR(115,"\\lor",new Atom(115,"<m:r><m:t>∨</m:t></m:r>"),0),
	VEE(116,"\\vee",new Atom(116,"<m:r><m:t>∨</m:t></m:r>"),0),
	BIGVEE(117,"\\bigvee",new Atom(117,"<m:r><m:t>∨</m:t></m:r>"),0),
	LNOT(118,"\\lnot",new Atom(118,"<m:r><m:t>¬</m:t></m:r>"),0),
	NEG(119,"\\neg",new Atom(119,"<m:r><m:t>¬</m:t></m:r>"),0),
	SETMINUS(120,"\\setminus",new Atom(120,"<m:r><m:t>∖</m:t></m:r>"),0),
	SMALLSETMINUS(121,"\\smallsetminus",new Atom(121,"<m:r><m:t>∖</m:t></m:r>"),0),
	NABLA(122,"\\nabla",new Atom(122,"<m:r><m:t>∇</m:t></m:r>"),0),
	SIM(123,"\\sim",new Atom(123,"<m:r><m:t>~</m:t></m:r>"),0),
	RIGHTHARPOONUP(124,"\\rightharpoonup",new Atom(124,"<m:r><m:t>⇀</m:t></m:r>"),0),
	RIGHTHARPOONDOWN(125,"\\rightharpoondown",new Atom(125,"<m:r><m:t>⇁</m:t></m:r>"),0),
	LEFTHARPOONDOWN(126,"\\leftharpoondown",new Atom(126,"<m:r><m:t>↽</m:t></m:r>"),0),
	LEFTHARPOONUP(127,"\\leftharpoonup",new Atom(127,"<m:r><m:t>↼</m:t></m:r>"),0),
	UPHARPOONLEFT(128,"\\upharpoonleft",new Atom(128,"<m:r><m:t>↿</m:t></m:r>"),0),
	UPHARPOONRIGHT(129,"\\upharpoonright",new Atom(129,"<m:r><m:t>↾</m:t></m:r>"),0),
	DOWNHARPOONLEFT(130,"\\downharpoonleft",new Atom(130,"<m:r><m:t>⇃</m:t></m:r>"),0),
	DOWNHARPOONRIGHT(131,"\\downharpoonright",new Atom(131,"<m:r><m:t>⇂</m:t></m:r>"),0),
	PERCENT(132,"\\%",new Atom(132,"<m:r><m:t>%</m:t></m:r>"),0),
	MHO(133,"\\mho",new Atom(133,"<m:r><m:t>℧</m:t></m:r>"),0),
	HBAR(134,"\\hbar",new Atom(134,"<m:r><m:t>ℏ</m:t></m:r>"),0),
	ELL(135,"\\ell",new Atom(135,"<m:r><m:t>l</m:t></m:r>"),0),
	CDOTS(136,"\\cdots",new Atom(136,"<m:r><m:t>⋯</m:t></m:r>"),0),
	INT(137,"\\int",new Atom(137,"<m:r><m:t>∫</m:t></m:r>"),0),
	SUM(138,"\\sum",new Atom(138,"<m:r><m:t>∑</m:t></m:r>"),0),
	PROD(139,"\\prod",new Atom(139,"<m:r><m:t>∏</m:t></m:r>"),0),
	IINT(140,"\\iint",new Atom(140,"<m:r><m:t>∬</m:t></m:r>"),0),
	IIINT(141,"\\iiint",new Atom(141,"<m:r><m:t>∭</m:t></m:r>"),0),
	BIGCAP(142,"\\bigcap",new Atom(142,"<m:r><m:t>∩</m:t></m:r>"),0),
	BIGCUP(143,"\\bigcup",new Atom(143,"<m:r><m:t>∪</m:t></m:r>"),0),
	U200B(144,"\\u200B",new Atom(143,"<m:r><m:t>\u200B</m:t></m:r>"),0),
	GT_(145,">",new Atom(145,"<m:r><m:t>&gt;</m:t></m:r>"),0),
	LT_(146,"<",new Atom(146,"<m:r><m:t>&lt;</m:t></m:r>"),0),
	NOLIMITS(147,"\\nolimits",new Atom(147,"<m:r><m:t>\u200B</m:t></m:r>"),0),
	LIMITS(148,"\\limits",new Atom(148,"<m:r><m:t>\u200B</m:t></m:r>"),0),
	LANGLE(149,"\\langle",new Atom(149,"<m:r><m:t>⟨</m:t></m:r>"),0),
	RANGLE(150,"\\rangle",new Atom(150,"<m:r><m:t>⟩</m:t></m:r>"),0),
	LVERT(151,"\\lvert",new Atom(151,"<m:r><m:t>‖</m:t></m:r>"),0),
	RVERT(152,"\\rvert",new Atom(152,"<m:r><m:t>‖</m:t></m:r>"),0),
	OINT(153,"\\oint",new Atom(153,"<m:r><m:t>∮</m:t></m:r>"),0),
	COPROD(154,"\\coprod",new Atom(154,"<m:r><m:t>∐</m:t></m:r>"),0),
	GEQ(155,"\\geq",new Atom(155,"<m:r><m:t>≥</m:t></m:r>"),0),
	SUBSET(156,"\\subset",new Atom(156,"<m:r><m:t>⊂</m:t></m:r>"),0),
	SUPSET(157,"\\supset",new Atom(157,"<m:r><m:t>⊃</m:t></m:r>"),0),
	COLON(158,"\\colon",new Atom(158,"<m:r><m:t>:</m:t></m:r>"),0),
    MATHOP(159,"\\mathop",new Atom(159,""),0),
    MOD(160,"\\mod",new Atom(160,"<m:r><m:t>mod </m:t></m:r>"),0),
    BMOD(161,"\\bmod",new Atom(161,"<m:r><m:t>mod </m:t></m:r>"),0),
    PMOD(162,"\\pmod",new Atom(162,"","<m:r><m:t>(mod </m:t></m:r>",new Atom(),"<m:r><m:t>)</m:t></m:r>"),1),
    POD(163,"\\pod",new Atom(163,"","<m:r><m:t>(</m:t></m:r>",new Atom(),"<m:r><m:t>)</m:t></m:r>"),1),
    EQUIV(164,"\\equiv",new Atom(164,"<m:r><m:t>&#8801;</m:t></m:r>"),0),
    MAX(165,"\\max",new Atom(165,"<m:r><m:t>max</m:t></m:r>"),0),
    MIN(166,"\\min",new Atom(166,"<m:r><m:t>min</m:t></m:r>"),0),
    PHANTOM(167,"\\phantom",new Atom(167,""),0),
    WELL(168,"\\#",new Atom(168,"<m:r><m:t>#</m:t></m:r>"),0),
    DOLLAR(169,"\\$",new Atom(169,"<m:r><m:t>$</m:t></m:r>"),0),
    TIPHAT(170,"\\^",new Atom(170,"<m:r><m:t>^</m:t></m:r>"),0),
    DOWNLINE(171,"\\_",new Atom(171,"<m:r><m:t>_</m:t></m:r>"),0),
    WAVELINE(172,"\\~",new Atom(172,"<m:r><m:t>~</m:t></m:r>"),0),
	GEQSLANT(173,"\\geqslant",new Atom(173,"<m:r><m:t>⩾</m:t></m:r>"),0),
	CLOSE_SPACE(174,"\\:",new Atom(174,""),0),
	VARNOTHING(175,"\\varnothing",new Atom(175,"<m:r><m:t>∅</m:t></m:r>"),0),
	NOTIN(176,"\\notin",new Atom(176,"<m:r><m:t>∉</m:t></m:r>"),0),
	LG(177,"\\lg",new Atom(177,"<m:r><m:t>lg</m:t></m:r>"),0),
	BACKSLASH(178,"\\backslash",new Atom(178,"<m:r><m:t>\\</m:t></m:r>"),0),
	ARCTAN(179,"\\arctan",new Atom(179,"<m:r><m:t>arctan</m:t></m:r>"),0),
	ARCSIN(180,"\\arcsin",new Atom(180,"<m:r><m:t>arcsin</m:t></m:r>"),0),
	ARCCOS(181,"\\arccos",new Atom(181,"<m:r><m:t>arccos</m:t></m:r>"),0),
	LEQSLANT(182,"\\leqslant",new Atom(182,"<m:r><m:t>⩽</m:t></m:r>"),0),
	CONG(183,"\\cong",new Atom(183,"<m:r><m:t>≅</m:t></m:r>"),0),
	COMPLEMENT(184,"\\complement",new Atom(184,"<m:r><m:t>∁</m:t></m:r>"),0),
	VERT(185,"\\vert",new Atom(185,"<m:r><m:t>|</m:t></m:r>"),0),
	BACK_SLASH(186,"\\",new Atom(186,""),0),
	BIGTRIANGLEUP(187,"\\bigtriangleup",new Atom(187,"<m:r><m:t>△</m:t></m:r>"),0),
	ODOT(188,"\\odot",new Atom(188,"<m:r><m:t>⊙</m:t></m:r>"),0),
	MID(189,"\\mid",new Atom(189,"<m:r><m:t>∣</m:t></m:r>"),0),
	TRIANGLEQ(190,"\\triangleq",new Atom(190,"<m:r><m:t>≜</m:t></m:r>"),0),
    O_MEGA(191,"\\Omega",new Atom(54,"<m:r><m:t>Ω</m:t></m:r>"),0),
    RIGHTLEFTHARPOONS(192,"\\rightleftharpoons",new Atom(192,"<m:r><m:t>⇌</m:t></m:r>"),0),
    LEFTRIGHTHARPOONS(193,"\\leftrightharpoons",new Atom(193,"<m:r><m:t>⇋</m:t></m:r>"),0),
    RIGHTLEFTARROWS(194,"\\rightleftarrows",new Atom(194,"<m:r><m:t>⇌</m:t></m:r>"),0),
    LEFTRIGHTARROWS(195,"\\leftrightarrows",new Atom(195,"<m:r><m:t>⇋</m:t></m:r>"),0),
    TILDE(196,"\\tilde",new Atom(196,"<m:r><m:t>~</m:t></m:r>"),0),
    VARTRIANGLE(197,"\\vartriangle",new Atom(197,"<m:r><m:t>△</m:t></m:r>"),0),
    L_AMBDA(198,"\\Lambda",new Atom(198,"<m:r><m:t>Λ</m:t></m:r>"),0),
    NU(199,"\\nu",new Atom(199,"<m:r><m:t>ν</m:t></m:r>"),0),
	TFRAC(200,"\\tfrac",new Atom(200,"<m:f><m:fPr><m:ctrlPr><w:rPr><w:sz w:val=\"30\"/></w:rPr></m:ctrlPr></m:fPr>","<m:num>",new Atom(),"</m:num>","<m:den>",new Atom(),"</m:den></m:f>"),1),
    CENTERDOT(201,"\\centerdot",new Atom(201,"<m:r><m:t>·</m:t></m:r>"),0),
    T_HETA(202,"\\Theta",new Atom(202,"<m:r><m:t>Θ</m:t></m:r>"),0),
    GG(203,"\\gg",new Atom(203,"<m:r><m:t>≫</m:t></m:r>"),0),
    LL(204,"\\ll",new Atom(204,"<m:r><m:t>≪</m:t></m:r>"),0),
	BIGCIRC(205,"\\bigcirc",new Atom(205,"<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><w:rPr><w:rFonts w:ascii=\"MS Gothic\" w:eastAsia=\"MS Gothic\" w:hAnsi=\"MS Gothic\" w:cs=\"MS Gothic\" w:hint=\"eastAsia\"/></w:rPr><m:t>◯</m:t> </m:r> "),0),
	BACKSIM(206,"\\backsim",new Atom(206,"<m:r><m:t>∽</m:t></m:r>"),0),
    BIGSTAR(207,"\\bigstar",new Atom(207,"<m:r><w:sym w:font=\"Wingdings 2\" w:char=\"F0E9\"/></m:r>"),0),
    SMALL(208,"\\small",new Atom(207,"<m:r><m:t></m:t></m:r>"),0),//暂且如此
    VARTHETA(209,"\\vartheta",new Atom(209,"<m:r><m:t>ϑ</m:t></m:r>"),0),
    BLACKTRIANGLE(210,"\\blacktriangle",new Atom(210,"<m:r><m:t>▲</m:t></m:r>"),0),
    SURD(211,"\\surd",new Atom(211,"<m:r><m:t>√</m:t></m:r>"),0),
    SUBSETEQ(212,"\\subseteq",new Atom(212,"<m:r><m:t>⊆</m:t></m:r>"),0),
    SUPSETEQ(213,"\\supseteq",new Atom(213,"<m:r><m:t>⊇</m:t></m:r>"),0),
	EMPTYSET(214,"\\emptyset",new Atom(214,"<m:r><m:t>∅</m:t></m:r>"),0),
    VARGAMMA(215,"\\varGamma",new Atom(215,"<m:r><m:t>Γ</m:t></m:r>"),0),
    LOZENGE(216,"\\lozenge",new Atom(216,"<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><m:t>◊</m:t> </m:r>"),0),
    FROWN(217,"\\frown",new Atom(217,"<m:r><w:rPr><w:rFonts w:eastAsia=\"等线\"/></w:rPr><m:t>⌒</m:t></m:r>"),0),
	GT(218,"\\gt",new Atom(218,"<m:r><m:t>&gt;</m:t></m:r>"),0),
	LT(219,"\\lt",new Atom(219,"<m:r><m:t>&lt;</m:t></m:r>"),0),
	ZETA(219,"\\zeta",new Atom(219,"<m:r><m:t>ζ</m:t></m:r>"),0),
	PSI(220,"\\psi",new Atom(220,"<m:r><m:t>ψ</m:t></m:r>"),0),
	VARSIGMA(221,"\\varsigma",new Atom(221,"<m:r><m:t>ς</m:t></m:r>"),0),
	NOT(222,"\\not",new Atom(222,"<m:r><m:t>/</m:t></m:r>"),0),
	BLACKSQUARE(223,"\\blacksquare",new Atom(223,"<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><m:t>█</m:t> </m:r>"),0),
	DIVIDEONTIMES(224,"\\divideontimes",new Atom(224,"<m:r><m:t>⋇</m:t></m:r>"),0),
	STAR(225,"\\star",new Atom(225,"<m:r><m:t>⋆</m:t></m:r>"),0),
	SUBSETNEQ(226,"\\subsetneq",new Atom(226,"<m:r><m:t>⊊</m:t></m:r>"),0),
	URCORNER(227,"\\urcorner",new Atom(227,"<m:r><w:rPr><w:position w:val=\"6\"/></w:rPr><m:t>¬</m:t> </m:r>"),0),
	TRIANGLERIGHT(228,"\\triangleright",new Atom(228,"<m:r><m:rPr><m:sty m:val=\"p\"/><w:rFonts w:ascii=\"Cambria Math\" w:eastAsia=\"MS Gothic\" w:hAnsi=\"Cambria Math\" w:hint=\"eastAsia\"/></m:rPr><m:t>▻</m:t> </m:r>"),0),
	TRIANGLELEFT(229,"\\triangleleft",new Atom(229,"<m:r><m:rPr><m:sty m:val=\"p\"/><w:rFonts w:ascii=\"Cambria Math\" w:eastAsia=\"MS Gothic\" w:hAnsi=\"Cambria Math\" w:hint=\"eastAsia\"/></m:rPr><m:t>◁</m:t> </m:r>"),0),
	TRIANGLEDOWN(230,"\\triangledown",new Atom(230,"<m:r><m:rPr><m:sty m:val=\"p\"/><w:rFonts w:ascii=\"Cambria Math\" w:eastAsia=\"MS Gothic\" w:hAnsi=\"Cambria Math\"/></m:rPr><m:t>∇</m:t></m:r>"),0),
	CHECKMARK(231,"\\checkmark",new Atom(231,"<m:r><m:t>✓</m:t></m:r>"),0),
	AST(232,"\\ast",new Atom(232,"<m:r><m:t>*</m:t></m:r>"),0),
	CIRCLEDCIRC(233,"\\circledcirc",new Atom(233,"<m:r><m:rPr><m:sty m:val=\"p\"/><w:rFonts w:ascii=\"Cambria Math\" w:eastAsia=\"MS UI Gothic\" w:hAnsi=\"Cambria Math\" w:cs=\"MS Gothic\" w:hint=\"eastAsia\"/></m:rPr><m:t>◎</m:t> </m:r>"),0),
	THICKAPPROX(234,"\\thickapprox",new Atom(234,"<m:r><m:t>≈</m:t></m:r>"),0),
	PREC(235,"\\prec",new Atom(235,"<m:r><m:t>≺</m:t></m:r>"),0),
	LBRACE(236,"\\lbrace",new Atom(236,"<m:r><m:t>{</m:t></m:r>"),0),
	RBRACE(237,"\\rbrace",new Atom(237,"<m:r><m:t>}</m:t></m:r>"),0),
	VDOTS(238,"\\vdots",new Atom(238,"<m:r><m:t>⋮</m:t></m:r>"),0),
	RDDOTS(239,"\\rddots",new Atom(239,"<m:r><m:t>⋰</m:t></m:r>"),0),
	DDOTS(240,"\\ddots",new Atom(240,"<m:r><m:t>⋱</m:t></m:r>"),0),
	A_ND(241,"\\And",new Atom(241,"<m:r><m:t>&#38;</m:t></m:r>"),0),
	BIGODOT(242,"\\bigodot",new Atom(242,"<m:r><m:rPr><m:sty m:val=\"p\"/><w:rFonts w:ascii=\"Cambria Math\" w:eastAsia=\"等线\" w:hAnsi=\"Cambria Math\" w:hint=\"eastAsia\"/></m:rPr><m:t>☉</m:t> </m:r>"),0),
	BLACKLOZENGE(243,"\\blacklozenge",new Atom(243,"<m:r><m:rPr><m:sty m:val=\"p\"/><w:rFonts w:ascii=\"Cambria Math\" w:eastAsia=\"等线\" w:hAnsi=\"Cambria Math\" w:hint=\"eastAsia\"/></m:rPr><m:t>◆</m:t> </m:r>"),0),
	DIAMOND(244,"\\diamond",new Atom(244,"<m:r><m:t>◊</m:t></m:r>"),0),
	DIAMONDSUIT(245,"\\diamondsuit",new Atom(245,"<m:r><m:rPr><m:sty m:val=\"p\"/><w:rFonts w:ascii=\"Segoe UI Symbol\" w:hAnsi=\"Segoe UI Symbol\" w:cs=\"Segoe UI Symbol\"/></m:rPr><m:t>♢</m:t> </m:r>"),0),
	VAR_DELTA(246,"\\varDelta",new Atom(246,"<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><m:t>∆</m:t></m:r>"),0),
	SEARROW(247,"\\searrow",new Atom(247,"<m:r><m:t>↘</m:t></m:r>"),0),
	SWARROW(248,"\\swarrow",new Atom(248,"<m:r><m:t>↙</m:t></m:r>"),0),
	NSUBSETEQ(249,"\\nsubseteq",new Atom(249,"<m:r><m:t>⊈</m:t></m:r>"),0),
	NRIGHTARROW(250,"\\nRightarrow",new Atom(250,"<m:r><m:t>⇏</m:t></m:r>"),0),
	NLEFTARROW(251,"\\nleftarrow",new Atom(251,"<m:r><m:t>↚</m:t></m:r>"),0),
	SUCC(252,"\\succ",new Atom(252,"<m:r><m:t>≻</m:t></m:r>"),0),
	MP(253,"\\mp",new Atom(253,"<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><m:t>∓</m:t></m:r>"),0),



    SUP(20,"^",new Atom(20,"<m:sSup>","<m:e>",new Atom("\u200B",0),"</m:e>","<m:sup>",new Atom(),"</m:sup></m:sSup>"),-1),
    SUPSUB(21,"^",new Atom(21,"<m:sSubSup>", Arrays.asList(new AtomBE("<m:e>",new Atom("\u200B",0),"</m:e>"),new AtomBE("<m:sup>",new Atom(),"</m:sup>"),new AtomBE("<m:sub>",new Atom(),"</m:sub></m:sSubSup>"))),-1),


    SUB(30,"_",new Atom(30,"<m:sSub>","<m:e>",new Atom("\u200B",0),"</m:e>","<m:sub>",new Atom(),"</m:sub></m:sSub>"),-1),
    SUBSUP(31,"_",new Atom(31,"<m:sSubSup>", Arrays.asList(new AtomBE("<m:e>",new Atom("\u200B",0),"</m:e>"),new AtomBE("<m:sub>",new Atom(),"</m:sub>"),new AtomBE("<m:sup>",new Atom(),"</m:sup></m:sSubSup>"))),-1),

    AND(40,"&",new Atom(40,"<m:r><m:t>\u200B</m:t></m:r></m:e><m:e><m:r><m:t>\u200B</m:t></m:r>"),0),
    POUND(41,"&pound;",new Atom(41,"<m:r><m:t>£</m:t></m:r>"),0),

	DOUBLEENTER(49,"\\\\",new Atom(50,"<m:r><m:t>\\</m:t></m:r>"),0),

    ENTER(50,"\\\\",new Atom(50,"</m:e></m:mr><m:mr><m:e>"),0),

    LONGEQUAL(51,"═",new Atom(51,"<m:r><m:t>=</m:t></m:r>"),0),
    WAVE(52,"~",new Atom(51,"<m:r><m:t></m:t></m:r>"),0),//暂且这样解析

	HFILL(53,"\\hfill",new Atom(50,"</m:e></m:mr><m:mr><m:e>"),0),


	LN(200,"\\ln",new Atom(200,"<m:r><m:t>ln</m:t></m:r>"),0),

	LIM(400,"\\lim",new Atom(400,"<m:r><m:t>ln</m:t></m:r>"),0),
	LIM_TO(401,"\\lim",new Atom(401,"<m:limLow><m:e><m:r><m:t>lim</m:t></m:r></m:e>", Arrays.asList(new AtomBE("<m:lim>",new Atom(),"</m:lim></m:limLow>"))),1),

	VEC(402,"\\vec",new Atom(402,"<m:acc><m:accPr><m:chr m:val=\"⃗\"/></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	OVERRIGHTARROW(403,"\\overrightarrow",new Atom(403,"<m:acc><m:accPr><m:chr m:val=\"⃗\"/></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	DDOT(404,"\\ddot",new Atom(404,"<m:acc><m:accPr><m:chr m:val=\"̈̈\"/></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	OVERLEFTARROW(405,"\\overleftarrow",new Atom(405,"<m:acc><m:accPr><m:chr m:val=\"⃖\"/></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	WIDEHAT(406,"\\widehat",new Atom(406,"<m:acc><m:accPr></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	OVERLINE(407,"\\overline",new Atom(407,"<m:acc><m:accPr><m:chr m:val=\"̅\"/></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	//OVERSET(408,"\\overset",new Atom(408,"<m:acc><m:accPr><m:chr m:val=\"⃑\"/></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	OVERSET(408,"\\overset",new Atom(408,"<m:limUpp><m:limUppPr></m:limUppPr>","<m:lim>",new Atom(),"</m:lim>","<m:e>",new Atom(),"</m:e></m:limUpp>"),1),
	OVERBRACE(409,"\\overbrace",new Atom(409,"<m:groupChr><m:groupChrPr><m:chr m:val=\"⏞\"/><m:pos m:val=\"top\"/><m:vertJc m:val=\"bot\"/></m:groupChrPr>","<m:e>",new Atom(),"</m:e></m:groupChr>"),1),
	UNDERBRACE(410,"\\underbrace",new Atom(410,"<m:groupChr><m:groupChrPr></m:groupChrPr>","<m:e>",new Atom(),"</m:e></m:groupChr>"),1),
	UNDER_BRACE(411,"\\underbrace",new Atom(411,"<m:limLow><m:e><m:groupChr><m:groupChrPr></m:groupChrPr>",Arrays.asList(new AtomBE("<m:e>",new Atom(),"</m:e></m:groupChr></m:e>"),new AtomBE("<m:lim>",new Atom(),"</m:lim></m:limLow>"))),1),
	OVER_BRACE(412,"\\overbrace",new Atom(411,"<m:limUpp><m:e><m:groupChr><m:groupChrPr><m:chr m:val=\"⏞\"/><m:pos m:val=\"top\"/><m:vertJc m:val=\"bot\"/></m:groupChrPr>",Arrays.asList(new AtomBE("<m:e>",new Atom(),"</m:e></m:groupChr></m:e>"),new AtomBE("<m:lim>",new Atom(),"</m:lim></m:limUpp>"))),1),
	STACKREL(413,"\\stackrel",new Atom(413,"<m:limUpp><m:limUppPr></m:limUppPr>","<m:lim>",new Atom(),"</m:lim>","<m:e>",new Atom(),"</m:e></m:limUpp>"),1),
	UNDERSET(414,"\\underset",new Atom(414,"<m:limLow><m:limLowPr></m:limLowPr>","<m:lim>",new Atom(),"</m:lim>","<m:e>",new Atom(),"</m:e></m:limLow>"),1),
	UNDERLINE(415,"\\underline",new Atom(415,"<m:groupChr><m:groupChrPr><m:chr m:val=\"̅\"/></m:groupChrPr>","<m:e>",new Atom(),"</m:e></m:groupChr>"),1),
	HAT(416,"\\hat",new Atom(416,"<m:acc><m:accPr></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	OVERPAREN(417,"\\overparen",new Atom(417,"<m:acc><m:accPr><m:chr m:val=\"⏜\"/></m:accPr>","<m:e>",new Atom(),"</m:e></m:acc>"),1),
	NO_LIMITS(418,"\\nolimits",new Atom(418,"<m:sSubSup>", Arrays.asList(new AtomBE("<m:e>",new Atom(),"</m:e>"),new AtomBE("<m:sub>",new Atom(),"</m:sub>"),new AtomBE("<m:sup>",new Atom(),"</m:sup></m:sSubSup>"))),-1),
	L_IMITS(419,"\\limits",new Atom(418,"<m:limUpp><m:limUppPr></m:limUppPr>", Arrays.asList(new AtomBE("<m:e><m:limLow><m:e>",new Atom("\u200B",0),"</m:e>"),new AtomBE("<m:lim>",new Atom(),"</m:lim></m:limLow></m:e>"),new AtomBE("<m:lim>",new Atom(),"</m:lim></m:limUpp>"))),-1),
	NO_LIMITS_1(420,"\\nolimits",new Atom(418,"<m:sSubSup>", Arrays.asList(new AtomBE("<m:e>",new Atom(),"</m:e>"),new AtomBE("<m:sup>",new Atom(),"</m:sup>"),new AtomBE("<m:sub>",new Atom(),"</m:sub></m:sSubSup>"))),-1),
	L_IMITS_1(421,"\\limits",new Atom(418,"<m:limLow><m:limLowPr></m:limLowPr>", Arrays.asList(new AtomBE("<m:e><m:limUpp><m:e>",new Atom("\u200B",0),"</m:e>"),new AtomBE("<m:lim>",new Atom(),"</m:lim></m:limUpp></m:e>"),new AtomBE("<m:lim>",new Atom(),"</m:lim></m:limLow>"))),-1),
	XLEFTARROW(422,"\\xleftarrow",new Atom(422,"<m:limLow>","<m:lim>",new Atom("<m:lim><m:r><m:t>\u200B</m:t></m:r></m:lim>",1),"</m:lim>","<m:e><m:groupChr><m:groupChrPr><m:chr m:val=\"←\"/><m:vertJc m:val=\"bot\"/></m:groupChrPr><m:e>",new Atom("\u200B"),"</m:e></m:groupChr></m:e></m:limLow>"),1),
	XRIGHTARROW(423,"\\xrightarrow",new Atom(423,"<m:limLow>","<m:lim>",new Atom("<m:lim><m:r><m:t>\u200B</m:t></m:r></m:lim>",1),"</m:lim>","<m:e><m:groupChr><m:groupChrPr><m:chr m:val=\"→\"/><m:vertJc m:val=\"bot\"/></m:groupChrPr><m:e>",new Atom("\u200B"),"</m:e></m:groupChr></m:e></m:limLow>"),1),
    OPERATORNAME(424,"\\operatorname",new Atom(424,"","",new Atom(),""),1),
    UNDERRIGHTARROW(425,"\\underrightarrow",new Atom(425,"<m:groupChr><m:groupChrPr><m:chr m:val=\"→\"/></m:groupChrPr>","<m:e>",new Atom(),"</m:e></m:groupChr>"),1),
	V_ERB(426,"\\Verb",new Atom(426,"",Arrays.asList(new AtomBE("<m:r><m:t></m:t></m:r>",new Atom(),"<m:r><m:t></m:t></m:r>"))),1),
	VERB(427,"\\verb",new Atom(427,"<m:r><m:t></m:t></m:r>"),0),
	BOXED(428,"\\boxed",new Atom(428,"<m:borderBox><m:borderBoxPr><m:ctrlPr><w:rPr><w:rFonts w:ascii=\"Cambria Math\" w:eastAsia=\"等线\" w:hAnsi=\"Cambria Math\"/><w:i/></w:rPr></m:ctrlPr></m:borderBoxPr>","<m:e>",new Atom(),"</m:e></m:borderBox>"),1),
	FBOX(429,"\\fbox",new Atom(429,"<m:borderBox><m:borderBoxPr><m:ctrlPr><w:rPr><w:rFonts w:ascii=\"Cambria Math\" w:eastAsia=\"等线\" w:hAnsi=\"Cambria Math\"/><w:i/></w:rPr></m:ctrlPr></m:borderBoxPr>","<m:e>",new Atom(),"</m:e></m:borderBox>"),1),





	BF(1000,"\\bf",new Atom(1000,"","<m:r><m:rPr><m:sty m:val=\"b\"/></m:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
	MATHBF(1001,"\\mathbf",new Atom(1001,"","<m:r><m:rPr><m:sty m:val=\"b\"/></m:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
	MATHRM(1002,"\\mathrm",new Atom(1002,"","<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><w:rPr><w:rFonts w:ascii=\"Times New Roman\" w:hAnsi=\"Times New Roman\" w:cs=\"Times New Roman\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
	RM(1003,"\\rm",new Atom(1003,"","<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><w:rPr><w:rFonts w:ascii=\"Times New Roman\" w:hAnsi=\"Times New Roman\" w:cs=\"Times New Roman\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
    BOLDSYMBOL(1004,"\\boldsymbol",new Atom(1004,"","<m:r><m:rPr><m:sty m:val=\"b\"/></m:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
    COLOR(1005,"\\color",new Atom(1005,"","<m:r><w:rPr><w:color w:val=\"FF0000\"/></w:rPr><m:t></m:t></m:r>",1,new Atom("\u200B"),"<m:r><m:t></m:t> </m:r>"),1),
	TEXT(1006,"\\text",new Atom(1006,"","<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><m:t></m:t></m:r>",2,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
	SF(1007,"\\sf",new Atom(1007,"","<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><w:rPr><w:rFonts w:ascii=\"Times New Roman\" w:hAnsi=\"Times New Roman\" w:cs=\"Times New Roman\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),//字体错误
	MATHSF(1008,"\\mathsf",new Atom(1008,"","<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><w:rPr><w:rFonts w:ascii=\"Times New Roman\" w:hAnsi=\"Times New Roman\" w:cs=\"Times New Roman\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),//字体错误
	DISPLAYSTYLE(1009,"\\displaystyle",new Atom(1009,"","<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><w:rPr><w:rFonts w:ascii=\"Cambria Math\" w:hAnsi=\"Cambria Math\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),//字体错误
    TEXTSTYLE(1010,"\\textstyle",new Atom(1010,"","<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><w:rPr><w:rFonts w:ascii=\"Cambria Math\" w:hAnsi=\"Cambria Math\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),//字体错误
    SCRIPTSTYLE(1011,"\\scriptstyle",new Atom(1011,"","<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><w:rPr><w:rFonts w:ascii=\"Cambria Math\" w:hAnsi=\"Cambria Math\"/><w:sz w:val=\"21\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),//字体错误
    SCRIPTSCRIPTSTYLE(1012,"\\scriptscriptstyle",new Atom(1012,"","<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><w:rPr><w:rFonts w:ascii=\"Cambria Math\" w:hAnsi=\"Cambria Math\"/><w:sz w:val=\"18\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),//字体错误
	TEXTRM(1013,"\\textrm",new Atom(1013,"","<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><w:rPr><w:rFonts w:ascii=\"Times New Roman\" w:hAnsi=\"Times New Roman\" w:cs=\"Times New Roman\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
	TEXTIT(1014,"\\textit",new Atom(1014,"","<m:r><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
	_LARGE(1015,"\\Large",new Atom(1015,"","<m:r><w:rPr><w:sz w:val=\"30\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
	LARGE(1016,"\\large",new Atom(1016,"","<m:r><w:rPr><w:sz w:val=\"30\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
	HUGE(1017,"\\huge",new Atom(1017,"","<m:r><w:rPr><w:sz w:val=\"40\"/></w:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),
	MATHCAL(1018,"\\mathcal",new Atom(1018,"","<m:r><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t></m:r>"),1),//错误字体
	TEXTBF(1019,"\\textbf",new Atom(1019,"","<m:r><m:rPr><m:sty m:val=\"b\"/></m:rPr><m:t></m:t></m:r>",1,new Atom(),"<m:r><m:t></m:t> </m:r>"),1),//错误字体




	_NBSP(2000,"&nbsp;",new Atom(2000,"<m:r><m:t>&#160;</m:t></m:r>"),0),
	_LT(2001,"&lt;",new Atom(2001,"<m:r><m:t>&#60;</m:t></m:r>"),0),
	_GT(2002,"&gt;",new Atom(2002,"<m:r><m:t>&#62;</m:t></m:r>"),0),
	_AMP(2003,"&amp;",new Atom(2003,"<m:r><m:t>&#38;</m:t></m:r>"),0),
	_QUOT(2004,"&quot;",new Atom(2004,"<m:r><m:t>&#34;</m:t></m:r>"),0),
	_APOS(2005,"&apos;",new Atom(2005,"<m:r><m:t>&#39;</m:t></m:r>"),0),
	_CENT(2006,"&cent;",new Atom(2006,"<m:r><m:t>&#162;</m:t></m:r>"),0),
	_POUND(2007,"&pound;",new Atom(2007,"<m:r><m:t>&#163;</m:t></m:r>"),0),
	_YEN(2008,"&yen;",new Atom(2008,"<m:r><m:t>&#165;</m:t></m:r>"),0),
	_EURO(2009,"&euro;",new Atom(2009,"<m:r><m:t>&#8364;</m:t></m:r>"),0),
	_SECT(2010,"&sect;",new Atom(2010,"<m:r><m:t>&#167;</m:t></m:r>"),0),
	_COPY(2011,"&copy;",new Atom(2011,"<m:r><m:t>&#169;</m:t></m:r>"),0),
	_REG(2012,"&reg;",new Atom(2012,"<m:r><m:t>&#174;</m:t></m:r>"),0),
	_TRADE(2013,"&trade;",new Atom(2013,"<m:r><m:t>&#8482;</m:t></m:r>"),0),
	_TIMES(2014,"&times;",new Atom(2014,"<m:r><m:t>&#215;</m:t></m:r>"),0),
	_DIVIDE(2015,"&divide;",new Atom(2015,"<m:r><m:t>&#247;</m:t></m:r>"),0),
	_ENSP(2016,"&ensp;",new Atom(2016,"<m:r><m:t>&#160;</m:t></m:r>"),0),
	_EMSP(2017,"&emsp;",new Atom(2017,"<m:r><m:t>&#160;</m:t></m:r>"),0),
	_A_LPHA(2018,"&Alpha;",new Atom(2018,"<m:r><m:t>&#913;</m:t></m:r>"),0),
	_G_AMMA(2019,"&Gamma;",new Atom(2019,"<m:r><m:t>&#915;</m:t></m:r>"),0),
	_E_PSILON(2020,"&Epsilon;",new Atom(2020,"<m:r><m:t>&#917;</m:t></m:r>"),0),
	_E_TA(2021,"&Eta;",new Atom(2021,"<m:r><m:t>&#919;</m:t></m:r>"),0),
	_I_OTA(2022,"&Iota;",new Atom(2022,"<m:r><m:t>&#921;</m:t></m:r>"),0),
	_L_AMBDA(2023,"&Lambda;",new Atom(2023,"<m:r><m:t>&#923;</m:t></m:r>"),0),
	_N_U(2024,"&Nu;",new Atom(2024,"<m:r><m:t>&#925;</m:t></m:r>"),0),
	_O_MICRON(2025,"&Omicron;",new Atom(2025,"<m:r><m:t>&#927;</m:t></m:r>"),0),
	_R_HO(2026,"&Rho;",new Atom(2026,"<m:r><m:t>&#929;</m:t></m:r>"),0),
	_T_AU(2027,"&Tau;",new Atom(2027,"<m:r><m:t>&#932;</m:t></m:r>"),0),
	_P_HI(2028,"&Phi;",new Atom(2028,"<m:r><m:t>&#934;</m:t></m:r>"),0),
	_P_SI(2029,"&Psi;",new Atom(2029,"<m:r><m:t>&#936;</m:t></m:r>"),0),
	_ALPHA(2030,"&alpha;",new Atom(2030,"<m:r><m:t>&#945;</m:t></m:r>"),0),
	_GAMMA(2031,"&gamma;",new Atom(2031,"<m:r><m:t>&#947;</m:t></m:r>"),0),
	_EPSILON(2032,"&epsilon;",new Atom(2032,"<m:r><m:t>&#949;</m:t></m:r>"),0),
	_ETA(2033,"&eta;",new Atom(2033,"<m:r><m:t>&#951;</m:t></m:r>"),0),
	_IOTA(2034,"&iota;",new Atom(2034,"<m:r><m:t>&#953;</m:t></m:r>"),0),
	_LAMBDA(2035,"&lambda;",new Atom(2035,"<m:r><m:t>&#955;</m:t></m:r>"),0),
	_NU(2036,"&nu;",new Atom(2036,"<m:r><m:t>&#957;</m:t></m:r>"),0),
	_OMICRON(2037,"&omicron;",new Atom(2037,"<m:r><m:t>&#959;</m:t></m:r>"),0),
	_RHO(2038,"&rho;",new Atom(2038,"<m:r><m:t>&#961;</m:t></m:r>"),0),
	_SIGMA(2039,"&sigma;",new Atom(2039,"<m:r><m:t>&#963;</m:t></m:r>"),0),
	_UPSILON(2040,"&upsilon;",new Atom(2040,"<m:r><m:t>&#965;</m:t></m:r>"),0),
	_CHI(2041,"&chi;",new Atom(2041,"<m:r><m:t>&#967;</m:t></m:r>"),0),
	_OMEGA(2042,"&omega;",new Atom(2042,"<m:r><m:t>&#969;</m:t></m:r>"),0),
	_UPSIH(2043,"&upsih;",new Atom(2043,"<m:r><m:t>&#978;</m:t></m:r>"),0),
	_BULL(2044,"&bull;",new Atom(2044,"<m:r><m:t>&#8226;</m:t></m:r>"),0),
	_PRIME(2045,"&prime;",new Atom(2045,"<m:r><m:t>&#8242;</m:t></m:r>"),0),
	_OLINE(2046,"&oline;",new Atom(2046,"<m:r><m:t>&#8254;</m:t></m:r>"),0),
	_WEIERP(2047,"&weierp;",new Atom(2047,"<m:r><m:t>&#8472;</m:t></m:r>"),0),
	_REAL(2048,"&real;",new Atom(2048,"<m:r><m:t>&#8476;</m:t></m:r>"),0),
	_ALEFSYM(2049,"&alefsym;",new Atom(2049,"<m:r><m:t>&#8501;</m:t></m:r>"),0),
	_UARR(2050,"&uarr;",new Atom(2050,"<m:r><m:t>&#8593;</m:t></m:r>"),0),
	_DARR(2051,"&darr;",new Atom(2051,"<m:r><m:t>&#8595;</m:t></m:r>"),0),
	_CRARR(2052,"&crarr;",new Atom(2052,"<m:r><m:t>&#8629;</m:t></m:r>"),0),
	_UA_RR(2053,"&uArr;",new Atom(2053,"<m:r><m:t>&#8657;</m:t></m:r>"),0),
	_DA_RR(2054,"&dArr;",new Atom(2054,"<m:r><m:t>&#8659;</m:t></m:r>"),0),
	_FORALL(2055,"&forall;",new Atom(2055,"<m:r><m:t>&#8704;</m:t></m:r>"),0),
	_EXIST(2056,"&exist;",new Atom(2056,"<m:r><m:t>&#8707;</m:t></m:r>"),0),
	_NABLA(2057,"&nabla;",new Atom(2057,"<m:r><m:t>&#8711;</m:t></m:r>"),0),
	_NOTIN(2058,"&notin;",new Atom(2058,"<m:r><m:t>&#8713;</m:t></m:r>"),0),
	_PROD(2059,"&prod;",new Atom(2059,"<m:r><m:t>&#8719;</m:t></m:r>"),0),
	_MINUS(2060,"&minus;",new Atom(2060,"<m:r><m:t>&#8722;</m:t></m:r>"),0),
	_RADIC(2061,"&radic;",new Atom(2061,"<m:r><m:t>&#8730;</m:t></m:r>"),0),
	_INFIN(2062,"&infin;",new Atom(2062,"<m:r><m:t>&#8734;</m:t></m:r>"),0),
	_AND(2063,"&and;",new Atom(2063,"<m:r><m:t>&#8869;</m:t></m:r>"),0),
	_CAP(2064,"&cap;",new Atom(2064,"<m:r><m:t>&#8745;</m:t></m:r>"),0),
	_INT(2065,"&int;",new Atom(2065,"<m:r><m:t>&#8747;</m:t></m:r>"),0),
	_SIM(2066,"&sim;",new Atom(2066,"<m:r><m:t>&#8764;</m:t></m:r>"),0),
	_ASYMP(2067,"&asymp;",new Atom(2067,"<m:r><m:t>&#8773;</m:t></m:r>"),0),
	_EQUIV(2068,"&equiv;",new Atom(2068,"<m:r><m:t>&#8801;</m:t></m:r>"),0),
	_GE(2069,"&ge;",new Atom(2069,"<m:r><m:t>&#8805;</m:t></m:r>"),0),
	_SUP(2070,"&sup;",new Atom(2070,"<m:r><m:t>&#8835;</m:t></m:r>"),0),
	_SUBE(2071,"&sube;",new Atom(2071,"<m:r><m:t>&#8838;</m:t></m:r>"),0),
	_OPLUS(2072,"&oplus;",new Atom(2072,"<m:r><m:t>&#8853;</m:t></m:r>"),0),
	_PERP(2073,"&perp;",new Atom(2073,"<m:r><m:t>&#8869;</m:t></m:r>"),0),
	_LCEIL(2074,"&lceil;",new Atom(2074,"<m:r><m:t>&#8968;</m:t></m:r>"),0),
	_LFLOOR(2075,"&lfloor;",new Atom(2075,"<m:r><m:t>&#8970;</m:t></m:r>"),0),
	_LOZ(2076,"&loz;",new Atom(2076,"<m:r><m:t>&#9674;</m:t></m:r>"),0),
	_CLUBS(2077,"&clubs;",new Atom(2077,"<m:r><m:t>&#9827;</m:t></m:r>"),0),
	_DIAMS(2078,"&diams;",new Atom(2078,"<m:r><m:t>&#9830;</m:t></m:r>"),0),
	_IEXCL(2079,"&iexcl;",new Atom(2079,"<m:r><m:t>&#161;</m:t></m:r>"),0),
	_LAQUO(2080,"&laquo;",new Atom(2080,"<m:r><m:t>&#171;</m:t></m:r>"),0),
	_SHY(2081,"&shy;",new Atom(2081,"<m:r><m:t>&#173;</m:t></m:r>"),0),
	_MACR(2082,"&macr;",new Atom(2082,"<m:r><m:t>&#175;</m:t></m:r>"),0),
	_PLUSMN(2083,"&plusmn;",new Atom(2083,"<m:r><m:t>&#177;</m:t></m:r>"),0),
	_SUP3(2084,"&sup3;",new Atom(2084,"<m:r><m:t>&#179;</m:t></m:r>"),0),
	_MICRO(2085,"&micro;",new Atom(2085,"<m:r><m:t>&#181;</m:t></m:r>"),0),
	_B_ETA(2086,"&Beta;",new Atom(2086,"<m:r><m:t>&#914;</m:t></m:r>"),0),
	_D_ELTA(2087,"&Delta;",new Atom(2087,"<m:r><m:rPr><m:sty m:val=\"p\"/></m:rPr><m:t>&#916;</m:t></m:r>"),0),
	_Z_ETA(2088,"&Zeta;",new Atom(2088,"<m:r><m:t>&#918;</m:t></m:r>"),0),
	_T_HETA(2089,"&Theta;",new Atom(2089,"<m:r><m:t>&#920;</m:t></m:r>"),0),
	_K_APPA(2090,"&Kappa;",new Atom(2090,"<m:r><m:t>&#922;</m:t></m:r>"),0),
	_M_U(2091,"&Mu;",new Atom(2091,"<m:r><m:t>&#924;</m:t></m:r>"),0),
	_X_I(2092,"&Xi;",new Atom(2092,"<m:r><m:t>&#926;</m:t></m:r>"),0),
	_P_I(2093,"&Pi;",new Atom(2093,"<m:r><m:t>&#928;</m:t></m:r>"),0),
	_S_IGMA(2094,"&Sigma;",new Atom(2094,"<m:r><m:t>&#931;</m:t></m:r>"),0),
	_U_PSILON(2095,"&Upsilon;",new Atom(2095,"<m:r><m:t>&#933;</m:t></m:r>"),0),
	_C_HI(2096,"&Chi;",new Atom(2096,"<m:r><m:t>&#935;</m:t></m:r>"),0),
	_O_MEGA(2097,"&Omega;",new Atom(2097,"<m:r><m:t>&#937;</m:t></m:r>"),0),
	_BETA(2098,"&beta;",new Atom(2098,"<m:r><m:t>&#946;</m:t></m:r>"),0),
	_DELTA(2099,"&delta;",new Atom(2099,"<m:r><m:t>&#948;</m:t></m:r>"),0),
	_ZETA(2100,"&zeta;",new Atom(2100,"<m:r><m:t>&#950;</m:t></m:r>"),0),
	_THETA(2101,"&theta;",new Atom(2101,"<m:r><m:t>&#952;</m:t></m:r>"),0),
	_KAPPA(2102,"&kappa;",new Atom(2102,"<m:r><m:t>&#954;</m:t></m:r>"),0),
	_MU(2103,"&mu;",new Atom(2103,"<m:r><m:t>&#956;</m:t></m:r>"),0),
	_XI(2104,"&xi;",new Atom(2104,"<m:r><m:t>&#958;</m:t></m:r>"),0),
	_PI(2105,"&pi;",new Atom(2105,"<m:r><m:t>&#960;</m:t></m:r>"),0),
	_SIGMAF(2106,"&sigmaf;",new Atom(2106,"<m:r><m:t>&#962;</m:t></m:r>"),0),
	_TAU(2107,"&tau;",new Atom(2107,"<m:r><m:t>&#964;</m:t></m:r>"),0),
	_PHI(2108,"&phi;",new Atom(2108,"<m:r><m:t>&#966;</m:t></m:r>"),0),
	_PSI(2109,"&psi;",new Atom(2109,"<m:r><m:t>&#968;</m:t></m:r>"),0),
	_THETASYM(2110,"&thetasym;",new Atom(2110,"<m:r><m:t>&#977;</m:t></m:r>"),0),
	_PIV(2111,"&piv;",new Atom(2111,"<m:r><m:t>&#982;</m:t></m:r>"),0),
	_HELLIP(2112,"&hellip;",new Atom(2112,"<m:r><m:t>&#8230;</m:t></m:r>"),0),
	_P_RIME(2113,"&Prime;",new Atom(2113,"<m:r><m:t>&#8243;</m:t></m:r>"),0),
	_FRASL(2114,"&frasl;",new Atom(2114,"<m:r><m:t>&#8260;</m:t></m:r>"),0),
	_IMAGE(2115,"&image;",new Atom(2115,"<m:r><m:t>&#8465;</m:t></m:r>"),0),
	_LARR(2116,"&larr;",new Atom(2116,"<m:r><m:t>&#8592;</m:t></m:r>"),0),
	_RARR(2117,"&rarr;",new Atom(2117,"<m:r><m:t>&#8594;</m:t></m:r>"),0),
	_HARR(2118,"&harr;",new Atom(2118,"<m:r><m:t>&#8596;</m:t></m:r>"),0),
	_LA_RR(2119,"&lArr;",new Atom(2119,"<m:r><m:t>&#8656;</m:t></m:r>"),0),
	_RA_RR(2120,"&rArr;",new Atom(2120,"<m:r><m:t>&#8658;</m:t></m:r>"),0),
	_HA_RR(2121,"&hArr;",new Atom(2121,"<m:r><m:t>&#8660;</m:t></m:r>"),0),
	_PART(2122,"&part;",new Atom(2122,"<m:r><m:t>&#8706;</m:t></m:r>"),0),
	_EMPTY(2123,"&empty;",new Atom(2123,"<m:r><m:t>&#8709;</m:t></m:r>"),0),
	_ISIN(2124,"&isin;",new Atom(2124,"<m:r><m:t>&#8712;</m:t></m:r>"),0),
	_NI(2125,"&ni;",new Atom(2125,"<m:r><m:t>&#8715;</m:t></m:r>"),0),
	_SUM(2126,"&sum;",new Atom(2126,"<m:r><m:t>&#8722;</m:t></m:r>"),0),
	_LOWAST(2127,"&lowast;",new Atom(2127,"<m:r><m:t>&#8727;</m:t></m:r>"),0),
	_PROP(2128,"&prop;",new Atom(2128,"<m:r><m:t>&#8733;</m:t></m:r>"),0),
	_ANG(2129,"&ang;",new Atom(2129,"<m:r><m:t>&#8736;</m:t></m:r>"),0),
	_OR(2130,"&or;",new Atom(2130,"<m:r><m:t>&#8870;</m:t></m:r>"),0),
	_CUP(2131,"&cup;",new Atom(2131,"<m:r><m:t>&#8746;</m:t></m:r>"),0),
	_THERE4(2132,"&there4;",new Atom(2132,"<m:r><m:t>&#8756;</m:t></m:r>"),0),
	_CONG(2133,"&cong;",new Atom(2133,"<m:r><m:t>&#8773;</m:t></m:r>"),0),
	_NE(2134,"&ne;",new Atom(2134,"<m:r><m:t>&#8800;</m:t></m:r>"),0),
	_LE(2135,"&le;",new Atom(2135,"<m:r><m:t>&#8804;</m:t></m:r>"),0),
	_SUB(2136,"&sub;",new Atom(2136,"<m:r><m:t>&#8834;</m:t></m:r>"),0),
	_NSUB(2137,"&nsub;",new Atom(2137,"<m:r><m:t>&#8836;</m:t></m:r>"),0),
	_SUPE(2138,"&supe;",new Atom(2138,"<m:r><m:t>&#8839;</m:t></m:r>"),0),
	_OTIMES(2139,"&otimes;",new Atom(2139,"<m:r><m:t>&#8855;</m:t></m:r>"),0),
	_SDOT(2140,"&sdot;",new Atom(2140,"<m:r><m:t>&#8901;</m:t></m:r>"),0),
	_RCEIL(2141,"&rceil;",new Atom(2141,"<m:r><m:t>&#8969;</m:t></m:r>"),0),
	_RFLOOR(2142,"&rfloor;",new Atom(2142,"<m:r><m:t>&#8971;</m:t></m:r>"),0),
	_SPADES(2143,"&spades;",new Atom(2143,"<m:r><m:t>&#9824;</m:t></m:r>"),0),
	_HEARTS(2144,"&hearts;",new Atom(2144,"<m:r><m:t>&#9829;</m:t></m:r>"),0),
	_CURREN(2145,"&curren;",new Atom(2145,"<m:r><m:t>&#164;</m:t></m:r>"),0),
	_BRVBAR(2146,"&brvbar;",new Atom(2146,"<m:r><m:t>&#166;</m:t></m:r>"),0),
	_UML(2147,"&uml;",new Atom(2147,"<m:r><m:t>&#168;</m:t></m:r>"),0),
	_ORDF(2148,"&ordf;",new Atom(2148,"<m:r><m:t>&#170;</m:t></m:r>"),0),
	_NOT(2149,"&not;",new Atom(2149,"<m:r><m:t>&#172;</m:t></m:r>"),0),
	_DEG(2150,"&deg;",new Atom(2150,"<m:r><m:t>&#176;</m:t></m:r>"),0),
	_SUP2(2151,"&sup2;",new Atom(2151,"<m:r><m:t>&#178;</m:t></m:r>"),0),
	_ACUTE(2152,"&acute;",new Atom(2152,"<m:r><m:t>&#180;</m:t></m:r>"),0),
	_MIDDOT(2153,"&middot;",new Atom(2153,"<m:r><m:t>·</m:t></m:r>"),0),
	_OSLASH(2154,"&oslash;",new Atom(2154,"<m:r><m:t>ø</m:t></m:r>"),0),
	_AACUTE(2155,"&aacute;",new Atom(2155,"<m:r><m:t>á</m:t></m:r>"),0),
	_ORDM(2156,"&ordm;",new Atom(2156,"<m:r><m:t>°</m:t></m:r>"),0),

	;
	private Integer  oMathId;
	private String oMathName;
	private Atom atom;
	private Integer type;//起始位置
	
	private OMathRule(Integer oMathId,String oMathName,Atom atom,Integer type){
		this.oMathId=oMathId;
		this.oMathName=oMathName;
		this.atom=atom;
		atom.setAtomId(oMathId);
		this.type=type;
	}
	public Integer getoMathId() {
		return oMathId;
	}
	public void setoMathId(Integer oMathId) {
		this.oMathId = oMathId;
	}
	public String getoMathName() {
		return oMathName;
	}
	public void setoMathName(String oMathName) {
		this.oMathName = oMathName;
	}
	public Atom getAtom() {
		return atom;
	}
	public void setAtom(Atom atom) {
		this.atom = atom;
	}
	public Integer getType() {
		return type;
	}
	public void setType(Integer type) {
		this.type = type;
	}

}
